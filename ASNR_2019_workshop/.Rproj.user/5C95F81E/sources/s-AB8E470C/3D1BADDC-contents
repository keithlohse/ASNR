# USSS Ski Development Study
# By Keith Lohse, Neurorehabilitation Informatics Lab, 2018-02-20

# Loading the essential libraries. 
library("ggplot2"); library("lme4"); library("car"); 
library("dplyr"); library("ez"); library("reshape2"); 
library("lmerTest"); library("corrplot")


##----------------------- Data Cleaning and QA ---------------------------------
## Setting the Directory -------------------------------------------------------
getwd()
setwd("C:/Users/u6015231/Box Sync/Trainees/Rhiannon Cowan/")
list.files()
# Make sure that the file data_session1.csv is saved in your working directory.

# Import the .csv files into R. 
DAT1<-read.csv("./data_DYNAMIC.csv", header = TRUE, sep=",",  
               na.strings=c("NA","NaN"," ",""))

# Use the head() function to check the structure of the data file.
head(DAT1)

# Static Variables
DAT2<-read.csv("./data_STATIC.csv", header = TRUE, sep=",",  
               na.strings=c("NA","NaN"," ",""))

# Use the head() function to check the structure of the data file.
head(DAT2)

# Merging the Person-level and the Person-Period-Level data
DAT3 <- merge(DAT1, DAT2, by=c("subID"))
head(DAT3)

# Rescaling hours to be in hundreds of hours
summary(DAT3$HOURS_TOTAL)

DAT3$HOURS_TOTAL<-DAT3$HOURS_TOTAL/100
DAT3$Competition<-DAT3$Competition/100
DAT3$Coach_OtoO<-DAT3$Coach_OtoO/100
DAT3$Coach_Gro<-DAT3$Coach_Gro/100
DAT3$Individual<-DAT3$Individual/100
DAT3$Play<-DAT3$Play/100
DAT3$Indirect<-DAT3$Indirect/100

summary(DAT3$HOURS_TOTAL)
densityPlot(DAT3$HOURS_TOTAL)
densityPlot(DAT3$Coach_Gro)

# Creating a mean-centered version of the age variable
DAT3$Rel_Age<-DAT3$Age_2018-mean(DAT3$Age_2018)


# Removing Outliers in Hours
quantile(DAT3$HOURS_TOTAL, 0.95, na.rm=TRUE)
TRIM<-subset(DAT3, HOURS_TOTAL<=20)
densityPlot(DAT3$HOURS_TOTAL)
densityPlot(DAT3$Individual)

# Exporting the trimmed data with outliers removed
write.csv(TRIM, "./data_ALL_TRIM.csv")


## ------------------- TECH POINTS DATA SET ------------------------------------
TECH<-subset(TRIM, NAT_TECH != "NA")
TECH<-subset(TECH, NAT_TECH != 0)

# Calculating Mean Variables for Hours of Practice
TECH_LVL2<-summarize(group_by(TECH, subID),
                mean_HOURS_TOTAL = mean(HOURS_TOTAL, na.rm=TRUE),
                mean_Competition = mean(Competition, na.rm=TRUE),
                mean_Coach_OtoO = mean(Coach_OtoO, na.rm=TRUE),
                mean_Coach_Gro = mean(Coach_Gro, na.rm=TRUE),
                mean_Individual = mean(Individual, na.rm=TRUE),
                mean_Play = mean(Play, na.rm=TRUE),
                mean_Indirect = mean(Indirect, na.rm=TRUE),
                mean_Injury_Weeks = mean(Injury_Weeks, na.rm=TRUE))
head(TECH_LVL2)

# Creating mean centered versions of the LVL1 (Dynamic) variables:
TECH <- merge(TECH, TECH_LVL2, by=c("subID"))
head(TECH)
tail(TECH)

TECH$HOURS_TOTAL.c<-TECH$HOURS_TOTAL-TECH$mean_HOURS_TOTAL
TECH$Competition.c<-TECH$Competition-TECH$mean_Competition
TECH$Coach_OtoO.c<-TECH$Coach_OtoO-TECH$mean_Coach_OtoO
TECH$Coach_Gro.c<-TECH$Coach_Gro-TECH$mean_Coach_Gro
TECH$Individual.c<-TECH$Individual-TECH$mean_Individual
TECH$Play.c<-TECH$Play-TECH$mean_Play
TECH$Indirect.c<-TECH$Indirect-TECH$mean_Indirect
TECH$Injury_Weeks.c<-TECH$Injury_Weeks-TECH$mean_Injury_Weeks


# Exporting the "clean" data file:
write.csv(TECH, "./data_TECH_CLEAN.csv")




## --------------------- SPEED POINTS DATA SET ---------------------------------
SPD<-subset(TRIM, NAT_SPD != "NA")
SPD<-subset(SPD, NAT_SPD != 0)

# Calculating Mean Variables for Hours of Practice
SPD_LVL2<-summarize(group_by(SPD, subID),
                     mean_HOURS_TOTAL = mean(HOURS_TOTAL, na.rm=TRUE),
                     mean_Competition = mean(Competition, na.rm=TRUE),
                     mean_Coach_OtoO = mean(Coach_OtoO, na.rm=TRUE),
                     mean_Coach_Gro = mean(Coach_Gro, na.rm=TRUE),
                     mean_Individual = mean(Individual, na.rm=TRUE),
                     mean_Play = mean(Play, na.rm=TRUE),
                     mean_Indirect = mean(Indirect, na.rm=TRUE),
                     mean_Injury_Weeks = mean(Injury_Weeks, na.rm=TRUE))
head(SPD_LVL2)

# Creating mean centered versions of the LVL1 (Dynamic) variables:
SPD <- merge(SPD, SPD_LVL2, by=c("subID"))
head(SPD)
tail(SPD)

SPD$HOURS_TOTAL.c<-SPD$HOURS_TOTAL-SPD$mean_HOURS_TOTAL
SPD$Competition.c<-SPD$Competition-SPD$mean_Competition
SPD$Coach_OtoO.c<-SPD$Coach_OtoO-SPD$mean_Coach_OtoO
SPD$Coach_Gro.c<-SPD$Coach_Gro-SPD$mean_Coach_Gro
SPD$Individual.c<-SPD$Individual-SPD$mean_Individual
SPD$Play.c<-SPD$Play-SPD$mean_Play
SPD$Indirect.c<-SPD$Indirect-SPD$mean_Indirect
SPD$Injury_Weeks.c<-SPD$Injury_Weeks-SPD$mean_Injury_Weeks


# Exporting the "clean" data file:
write.csv(SPD, "./data_SPD_CLEAN.csv")






## ------------------------- INJURY DATA SET -----------------------------------
INJ<-subset(TRIM, Injury_Weeks != "NA")


# Calculating Mean Variables for Hours of Practice
INJ_LVL2<-summarize(group_by(INJ, subID),
                    mean_HOURS_TOTAL = mean(HOURS_TOTAL, na.rm=TRUE),
                    mean_Competition = mean(Competition, na.rm=TRUE),
                    mean_Coach_OtoO = mean(Coach_OtoO, na.rm=TRUE),
                    mean_Coach_Gro = mean(Coach_Gro, na.rm=TRUE),
                    mean_Individual = mean(Individual, na.rm=TRUE),
                    mean_Play = mean(Play, na.rm=TRUE),
                    mean_Indirect = mean(Indirect, na.rm=TRUE),
                    mean_Injury_Weeks = mean(Injury_Weeks, na.rm=TRUE))
head(INJ_LVL2)

# Creating mean centered versions of the LVL1 (Dynamic) variables:
INJ <- merge(INJ, INJ_LVL2, by=c("subID"))
head(INJ)
tail(INJ)

INJ$HOURS_TOTAL.c<-INJ$HOURS_TOTAL-INJ$mean_HOURS_TOTAL
INJ$Competition.c<-INJ$Competition-INJ$mean_Competition
INJ$Coach_OtoO.c<-INJ$Coach_OtoO-INJ$mean_Coach_OtoO
INJ$Coach_Gro.c<-INJ$Coach_Gro-INJ$mean_Coach_Gro
INJ$Individual.c<-INJ$Individual-INJ$mean_Individual
INJ$Play.c<-INJ$Play-INJ$mean_Play
INJ$Indirect.c<-INJ$Indirect-INJ$mean_Indirect
INJ$Injury_Weeks.c<-INJ$Injury_Weeks-INJ$mean_Injury_Weeks


# Exporting the "clean" data file:
write.csv(SPD, "./data_INJ_CLEAN.csv")

