getwd()
library(tidyverse)
ggplot(diamonds, aes(x=carat, y = price))+
geom_point(shape=1, size=1)+
stat_smooth(method="loess", se=FALSE)
ggplot(diamonds, aes(x=carat, y = price))+
geom_point(shape=1, size=1)+
stat_smooth(method="loess", se=FALSE) +
coord_cartesian(xlim=c(0,1))
ggplot(diamonds, aes(x=carat, y = price))+
geom_point(shape=1, size=1)+
stat_smooth(method="loess", se=FALSE) +
#coord_cartesian(xlim=c(0,1))
scale_x_continuous(lim=c(0,1))
# Loading the essential libraries.
library("ggplot2"); library("lme4"); library("car");
library("dplyr"); library("tidyr");
setwd("C:/Users/u6015231/Box Sync/Trainees/Joe Thomas/")
list.files("./")
DATA<-read.csv("./data_CI_ERRORS.csv", header = TRUE, sep=",",
na.strings=c("NA","NaN"," ",""))
head(DATA)
DATA$subID<-factor(DATA$subID)
DATA$target<-factor(DATA$target)
# If we want to trim based on ERROR magnitude:
DATA <- subset(DATA, absolute_error<=1000)
## Creating dataset for sequential analyses:
SEQ<- subset(DATA, absolute_error_next_trial<=1000)
SEQ<- subset(SEQ, absolute_error_previous_trial<=1000)
## Creating a subset of the data with only EE trials:
EE_DATA <- subset(SEQ, estimate_accuracy_CE != "NA")
head(EE_DATA)
# How does ERROR change over time in each group?
g1<-ggplot(DATA, aes(x = trial_block, y = absolute_error)) +
stat_smooth(aes(group=subID), method="loess", se=FALSE, col="grey80", lwd=.5)+
stat_smooth(aes(lty=group), method="loess", se=TRUE, col="black", lwd=1.5)+
facet_wrap(~target+group, ncol=2)
g2<-g1+scale_x_continuous(name = "Trial Number") +
scale_y_continuous(name = "Accuracy (AE)")
g3 <- g2 + theme_bw() +
theme(axis.text=element_text(size=14, colour="black"),
axis.title=element_text(size=14,face="bold")) +
theme(strip.text.x = element_text(size = 14)) +
theme(legend.position="none")
plot(g3)
# How does ERROR change over time in each group (slightly different)?
g1<-ggplot(DATA, aes(x = trial_total, y = absolute_error)) +
geom_point(aes(fill=as.factor(target)), pch=21)+
stat_smooth(aes(col=as.factor(target), fill=as.factor(target),
lty=group), method="loess", se=TRUE, col="black", lwd=1.5)+
facet_wrap(~group, ncol=2)
g2<-g1+scale_x_continuous(name = "Trial Number") +
scale_y_continuous(name = "Accuracy (AE)")
g3 <- g2 + theme_bw() +
theme(axis.text=element_text(size=14, colour="black"),
axis.title=element_text(size=14,face="bold")) +
theme(strip.text.x = element_text(size = 14))
plot(g3)
# How do EEs change over time in each group?
g1<-ggplot(EE_DATA, aes(x = trial_total, y = estimate_accuracy_CE)) +
geom_line(aes(group=subID))+
geom_point(aes(fill=as.factor(target)), pch=21, size=2, stroke=1.25) +
facet_wrap(~group, ncol=1)
g2<-g1+scale_x_continuous(name = "Trial Number") +
scale_y_continuous(name = "Estimation Accuracy (CE)")
g3 <- g2 + theme_bw() +
theme(axis.text=element_text(size=14, colour="black"),
axis.title=element_text(size=14,face="bold")) +
theme(strip.text.x = element_text(size = 14)) +
theme(legend.position="none")
plot(g3)
# Relationship between Previous and Current Accuracy?
head(SEQ)
g1<-ggplot(SEQ, aes(x = absolute_error_previous_trial, y = absolute_error)) +
geom_point(col="grey", pch=21, alpha=0.4)+
stat_smooth(aes(group=subID), col="grey80", method="lm", se=FALSE, lwd=.5)+
stat_smooth(aes(lty=group), method="lm", se=TRUE, col="black", lwd=1)+
facet_wrap(~group, ncol=2)
g2<-g1+scale_x_continuous(name = "Previous Accuracy (AE)") +
scale_y_continuous(name = "Current Accuracy (AE)")
g3 <- g2 + theme_bw() +
theme(axis.text=element_text(size=14, colour="black"),
axis.title=element_text(size=14,face="bold")) +
theme(strip.text.x = element_text(size = 14)) +
theme(legend.position="none")
# How does ERROR change over time in each group (slightly different)?
g1<-ggplot(DATA, aes(x = trial_total, y = absolute_error)) +
geom_point(aes(fill=as.factor(target)), pch=21)+
stat_smooth(aes(col=as.factor(target), fill=as.factor(target),
lty=group), method="loess", se=TRUE, col="black", lwd=1.5)+
facet_wrap(~group, ncol=2)
g2<-g1+scale_x_continuous(name = "Trial Number") +
scale_y_continuous(name = "Accuracy (AE)")
g3 <- g2 + theme_bw() +
theme(axis.text=element_text(size=14, colour="black"),
axis.title=element_text(size=14,face="bold")) +
theme(strip.text.x = element_text(size = 14))
plot(g3)
# --------------- Analysis of Absolute Error over Time -------------------------
head(DATA)
DATA$trial.z<-(DATA$trial_total-mean(DATA$trial_total))/sd(DATA$trial_total)
DATA$trial.z.sq<-DATA$trial.z^2
DATA$trial.z.cu<-DATA$trial.z^3
summary(DATA$trial.z)
m0<-lmer(absolute_error ~
# Fixed-effects
1+trial.z*target*group+
trial.z.sq*target*group+
trial.z.cu*target*group+
# Random-effects
(1+trial.z|subID), data=DATA, REML=FALSE)
Anova(m0, type="III")
DATA<-read.csv("./data_CI_ERRORS.csv", header = TRUE, sep=",",
na.strings=c("NA","NaN"," ",""))
head(DATA)
DATA$subID<-factor(DATA$subID)
DATA$target<-factor(DATA$target)
ggplot(data=DATA, aes(x=absolute_error))+
geom_histogram(binwidth=100)
ggplot(data=DATA, aes(x=absolute_error))+
geom_histogram(binwidth=50)
sum(DATA$absolute_error==0)
sum(DATA$absolute_error==0, na.rm=TRUE)
sum(DATA$absolute_error=>1000, na.rm=TRUE)
sum(DATA$absolute_error>=1000, na.rm=TRUE)
72/8820
head(DATA)
# If we want to trim based on ERROR magnitude:
DATA <- subset(DATA, absolute_error<=1000)
ACQ_DATA<- DATA %>%
group_by(subID, group, block) %>%
summarise(block_target = mean(target),
ave_CE = mean(constant_error),
ave_AE = mean(absolute_error))
warnings()
ACQ_DATA<- DATA %>%
group_by(subID, group, block) %>%
summarise(block_target = mean(target, na.rm=TRUE),
ave_CE = mean(constant_error, na.rm=TRUE),
ave_AE = mean(absolute_error, na.rm=TRUE))
ACQ_DATA<- DATA %>%
group_by(subID, group, block) %>%
summarise(block_target = mean(target, na.rm=TRUE),
ave_CE = mean(constant_error, na.rm=TRUE),
ave_AE = mean(absolute_error, na.rm=TRUE))
warnings()
summary(DATA$target)
DATA<-read.csv("./data_CI_ERRORS.csv", header = TRUE, sep=",",
na.strings=c("NA","NaN"," ",""))
# If we want to trim based on ERROR magnitude:
DATA <- subset(DATA, absolute_error<=1000)
ACQ_DATA<- DATA %>%
group_by(subID, group, block) %>%
summarise(block_target = mean(target, na.rm=TRUE),
ave_CE = mean(constant_error, na.rm=TRUE),
ave_AE = mean(absolute_error, na.rm=TRUE))
head(ACQ_DATA)
ACQ_DATA_WIDE<-
ACQ_DATA %>%
spread(block, ave_CE)
ACQ_DATA %>%
spread(block, ave_CE)
#ACQ_DATA_WIDE<-
library(reshape2)
head(ACQ_DATA)
reshape(ACQ_DATA, idvar = subID, timevar = block, direction="wide")
reshape(ACQ_DATA, idvar = "subID", timevar = "block", direction="wide")
getwd()
write.csv(ACQ_DATA, "ACQ_DATA_LONG.csv")
m0<-lmer(absolute_error ~
# Fixed-effects
1+trial.z*target*group+
trial.z.sq*target*group+
trial.z.cu*target*group+
# Random-effects
(1+trial.z|subID), data=DATA, REML=FALSE)
Anova(m0, type="III")
DATA$trial.z<-(DATA$trial_total-mean(DATA$trial_total))/sd(DATA$trial_total)
DATA$trial.z.sq<-DATA$trial.z^2
DATA$trial.z.cu<-DATA$trial.z^3
summary(DATA$trial.z)
m0<-lmer(absolute_error ~
# Fixed-effects
1+trial.z*target*group+
trial.z.sq*target*group+
trial.z.cu*target*group+
# Random-effects
(1+trial.z|subID), data=DATA, REML=FALSE)
Anova(m0, type="III")
# If we want to trim based on ERROR magnitude:
DATA <- subset(DATA, absolute_error<=1000)
summary(DATA$target)
ACQ_DATA<- DATA %>%
group_by(subID, group, block) %>%
summarise(block_target = mean(target, na.rm=TRUE),
ave_CE = mean(constant_error, na.rm=TRUE),
ave_AE = mean(absolute_error, na.rm=TRUE))
getwd()
write.csv(ACQ_DATA, "ACQ_DATA_LONG.csv")
DATA$subID<-factor(DATA$subID)
DATA$target<-factor(DATA$target)
## Creating dataset for sequential analyses:
SEQ<- subset(DATA, absolute_error_next_trial<=1000)
SEQ<- subset(SEQ, absolute_error_previous_trial<=1000)
## Creating a subset of the data with only EE trials:
EE_DATA <- subset(SEQ, estimate_accuracy_CE != "NA")
head(EE_DATA)
# --------------- Analysis of Absolute Error over Time -------------------------
head(DATA)
DATA$trial.z<-(DATA$trial_total-mean(DATA$trial_total))/sd(DATA$trial_total)
DATA$trial.z.sq<-DATA$trial.z^2
DATA$trial.z.cu<-DATA$trial.z^3
summary(DATA$trial.z)
m0<-lmer(absolute_error ~
# Fixed-effects
1+trial.z*target*group+
trial.z.sq*target*group+
trial.z.cu*target*group+
# Random-effects
(1+trial.z|subID), data=DATA, REML=FALSE)
Anova(m0, type="III")
summary(m0)
library("lmerTest")
summary(m0)
m0<-lmer(absolute_error ~
# Fixed-effects
1+trial.z*target*group+
trial.z.sq*target*group+
trial.z.cu*target*group+
# Random-effects
(1+trial.z|subID), data=DATA, REML=FALSE)
summary(m0)
setwd("C:/Users/u6015231/Box Sync/Trainees/Anupriya Pathania")
##### Opening libraries ----------------------------------------------
library("car"); library("compute.es"); library("ggplot2"); library("multcomp");
library("pastecs"); library("reshape")
library("ggplot2"); library("lme4"); library("lmerTest");
library("dplyr"); library("reshape2"); library("car");
library ("ICC"); library("psych");
library("ez")
DATA <- read.csv("./data_PRAC_long1.csv",
header = TRUE,na.strings=c("","NA","na"))
head(DATA)
##### lmer analysis
library(lmerTest)
DATA$method.c<-(as.numeric(DATA$method)-1.5)*(-1) ## convert method to numerical
DATA$method.c
head(DATA)
DATA$block.c<-DATA$blocknum-mean(DATA$blocknum)
head(DATA)
DATA$diff.c <- DATA$diff - mean(DATA$diff)
DATA$channel<-factor(DATA$channel)
summary(DATA$channel)
FRONTAL<-subset(DATA, channel=="frontal")
head(FRONTAL)
M1 <- lmer(slope ~ 1+ block.c*diff.c*method*channel+
(1|subID)+(1|subID:method)+(1|subID:channel),
data = DATA, REML = FALSE)
Anova(M1, type='III')
summary(M1)
LMER_mod <- lmer(slope ~ 1+ block.c*diff.c*channel+
(1|subID),
data = DATA[DATA$method=="lmer",], REML = FALSE)
Anova(LMER_mod, type = 'III')
FOOOF_mod <- lmer(slope ~ 1+ block.c*diff.c*channel+
(1|subID),
data = DATA[DATA$method=="fooof",], REML = FALSE)
Anova(FOOOF_mod, type = 'III')
LMER <- subset(DATA, method == "lmer")
head(LMER)
Fron_mod <- lmer(slope ~ 1+ block.c*diff.c+
(1|subID),
data = LMER[LMER$channel=="frontal",], REML = FALSE)
Anova(Fron_mod, type = 'III')
Cen_mod <- lmer(slope ~ 1+ block.c*diff.c+
(1|subID),
data = LMER[LMER$channel=="central",], REML = FALSE)
Anova(Cen_mod, type = 'III')
Par_mod <- lmer(slope ~ 1+ block.c*diff.c+
(1|subID),
data = LMER[LMER$channel=="parietal",], REML = FALSE)
Anova(Par_mod, type = 'III')
Occ_mod <- lmer(slope ~ 1+ block.c*diff.c+
(1|subID),
data = LMER[LMER$channel=="occipital",], REML = FALSE)
Anova(Occ_mod, type = 'III')
FOOOF <- subset(DATA, method == "fooof")
head(FOOOF)
Fron_mod <- lmer(slope ~ 1+ block.c*diff.c+
(1|subID),
data = FOOOF[FOOOF$channel=="frontal",], REML = FALSE)
Anova(Fron_mod, type = 'III')
Cen_mod <- lmer(slope ~ 1+ block.c*diff.c+
(1|subID),
data = FOOOF[FOOOF$channel=="central",], REML = FALSE)
Anova(Cen_mod, type = 'III')
##### Post hoc tests for FOOOF method for parietal channel -----------------------------
Par_mod <- lmer(slope ~ 1+ block.c*diff.c+
(1|subID), data = FOOOF[FOOOF$channel=="parietal",], REML = FALSE)
Anova(Par_mod, type = 'III')
Occ_mod <- lmer(slope ~ 1+ block.c*diff.c+
(1|subID), data = FOOOF[FOOOF$channel=="occipital",], REML = FALSE)
Anova(Occ_mod, type = 'III')
Fron_mod <- lmer(slope ~ 1+ block.c*diff.c+
(1|subID),
data = LMER[LMER$channel=="frontal",], REML = FALSE)
Anova(Fron_mod, type = 'III')
Cen_mod <- lmer(slope ~ 1+ block.c*diff.c+
(1|subID),
data = LMER[LMER$channel=="central",], REML = FALSE)
Anova(Cen_mod, type = 'III')
summary(Cen_mod)
Par_mod <- lmer(slope ~ 1+ block.c*diff.c+
(1|subID),
data = LMER[LMER$channel=="parietal",], REML = FALSE)
Anova(Par_mod, type = 'III')
Occ_mod <- lmer(slope ~ 1+ block.c*diff.c+
(1|subID),
data = LMER[LMER$channel=="occipital",], REML = FALSE)
Anova(Occ_mod, type = 'III')
summary(Occ_mod)
